<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="card.mapper.CardSetMapper">
	<insert id="insertCardSet" parameterType="csdto">
		insert into cardset(member_no,title,comment,open_scope,open_password,update_scope,update_password,createday) 
		values(#{no},#{title},#{comment},#{open_scope},#{open_password},#{update_scope},#{update_password},now())
	</insert>
	
	<select id="getCardSetNo" parameterType="Integer" resultType="Integer">
		select max(no) 
		from cardset
		where member_no = #{no} 
	</select> 
	
	<select id="getCardSetList" parameterType="Map" resultType="csdto">
		select cs.no,
		   cs.member_no,
		   cs.title,
		   cs.comment,
		   cs.open_scope,
		   cs.update_scope,
		   count(c.cardset_no) as cnt, 
		   cs.createday
		from cardset cs, card c
		where cs.member_no = #{no} and cs.no = c.cardset_no
		group by c.cardset_no
		order by no desc
		limit #{start}, 5
	</select>
	
	<select id="getSetCount" parameterType="Map" resultType="Integer">
		select count(*)
		from cardset
		where member_no = #{no}
	</select>
	
	<select id="getCardSet" parameterType="Map" resultType="csdto">
		select *
		from cardset
		where no = #{no}
	</select> 
	
	<select id="passCheck" parameterType="Map" resultType="Integer">
		select count(*)
		from cardset
		where no = #{no} and open_password = #{open_password}
	</select>
	
	<delete id="deleteCardSet" parameterType="Map">
		delete from cardset where no = #{no}
	</delete>
	
	<select id="updatePassCheck" parameterType="Map" resultType="Integer">
		select count(*)
		from cardset
		where no = #{no} and update_password = #{update_password}
	</select>
	
	<update id="updateCardSet" parameterType="csdto">
		update cardset
		set	title = #{title}, comment = #{comment},
			open_scope = #{open_scope}, open_password = #{open_password},
			update_scope = #{update_scope}, update_password = #{update_password}
		where no = #{no}
	</update>
	
	<select id="getCardSetSearchList" parameterType="Map" resultType="shdto">
		select
			c.*,
			m.name,
			m.provider,
			if(
		   		INSTR(profile,'google')>0,
		   		m.profile,
		   		if(
		   			INSTR(m.profile,'kakao')>0,
		   			m.profile,
		   			if(
		   				INSTR(m.profile,m.no)>0,
		   				concat('http://localhost:9000/profile/users/',m.profile),
		   				concat('http://localhost:9000/profile/default/',m.profile)
		   			)
		   		)
		   	) as profile
		from
			cardset c,
			member m
		where
			c.member_no = m.no and
			c.title like concat(#{searchText},'%')
		order by 
			c.createday desc
		limit 0, #{start}
	</select>
</mapper>